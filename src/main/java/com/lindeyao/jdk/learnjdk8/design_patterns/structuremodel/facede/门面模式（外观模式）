关于门面模式，这里有几个参与者： 客户端（调用者）、子系统（请求执行者，有多个）、中介者（转发请求，封装多个子系统调用）
中介者就是 门面模式的体现，非常的简单。使用门面模式，可以使客户端的使用变得非常的简单。
优点：
1：减少客户端与子系统之间的依赖而导致的耦合度高。使用了门面模式，客户端只对门面对象的依赖，与子系统对象无关。
2：提高了灵活性。不管子系统内部如何变化，主要不影响门面对象，子系统如何替换都没有任何影响。
缺点：
不符合开闭原则，对修改封闭，对扩展开放。
比如代码中的例子，如果有新的电器想要加入关闭电源的队伍中，只能在门面对象上进行修改。


代码的业务：
电源总开关与各个电器的电源开关的关系，假设现在有多个电器：冰箱、洗衣机、电视机。现在如果想外出旅游需要关闭电器电源，如果没有总电源开关，势必需要检查
每个电器的电源状态并将开关拔掉，比较麻烦。那么如果有了门面对象，提供了一个统一关闭电源的功能，就可以达到一次即可关闭所有电源的功能。
这里类比的对象如果：
1：多个电器 --> 代表了子系统的多个功能
2：客户端 --> 即用户
3：门面对象 --> 电源总开关

